name: Run Appium E2E Tests for swift-sdk PR

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ui-tests:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Setup Simulator
        run: |
          # Create simulator if it doesn't exist
          xcrun simctl create "iPhone 16 Pro" "iPhone 16 Pro" iOS18.2 || true
          # Boot simulator
          xcrun simctl boot "iPhone 16 Pro" || true
          # Wait for simulator to be ready
          sleep 10
          # Verify simulator is available
          SIMULATOR_UDID=$(xcrun simctl list devices | grep "iPhone 16 Pro" | grep "iOS18.2" | grep -E -o -i "([0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12})")
          if [ -z "$SIMULATOR_UDID" ]; then
            echo "Failed to find iPhone 16 Pro simulator with iOS 18.2"
            exit 1
          fi
          echo "Using simulator with UDID: $SIMULATOR_UDID"

      - name: Checkout Sample App
        uses: actions/checkout@v3
        with:
          repository: getpara/examples-hub
          token: ${{ secrets.GITHUB_TOKEN }}
          path: examples-hub
          ref: tyson/appium-testing

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: examples-hub/mobile/with-swift/tests/package-lock.json

      - name: Install Appium
        run: npm install -g appium

      - name: Install XCUITest Driver
        run: appium driver install xcuitest

      - name: Install Test Dependencies
        working-directory: examples-hub/mobile/with-swift/tests
        run: npm install

      - name: Build & Run Tests
        working-directory: examples-hub/mobile/with-swift
        env:
          PARA_API_KEY: ${{ secrets.PARA_API_KEY }}
          PARA_ENVIRONMENT: ${{ secrets.PARA_ENVIRONMENT }}
        run: |
          # Build app
          SIMULATOR_UDID=$(xcrun simctl list devices | grep "iPhone 16 Pro" | grep -E -o -i "([0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12})")
          xcodebuild -scheme "Example" \
            -destination "platform=iOS Simulator,id=$SIMULATOR_UDID" \
            -configuration Debug \
            -derivedDataPath /Users/runner/wda-derived-data \
            build install

          # Start Appium
          appium --log appium.log --debug &
          APPIUM_PID=$!
          sleep 10

          # Run tests
          cd tests
          npm test

          # Cleanup
          kill $APPIUM_PID || true

      - name: Upload Appium Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: appium-logs
          path: examples-hub/mobile/with-swift/appium.log